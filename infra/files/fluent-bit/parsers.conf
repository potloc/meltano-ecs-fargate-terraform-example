# Include fluent-bit default parsers
@INCLUDE /fluent-bit/etc/parsers.conf

# Parse ELT log lines
# E.g.:
# "2022-06-13T14:16:44.540936Z [info     ] INFO FLUSH early exit because of SEND_EXCEPTION"
# => { "time": "[TIMESTAMP]", "level": "info", "message": "INFO FLUSH early exit because of SEND_EXCEPTION" }
[PARSER]
  Name        elt
  Format      regex
  Regex       (?<time>[^\s]*)\s*\[(?<level>[^\]\s]*)\s*\]\s*(?<message>.*)
  Time_key    time
  Time_Format %Y-%m-%dT%H:%M:%S.%L%z

# Parse ELT log file path
# E.g.:
# meltano/logs/elt/github-to-stitch/114439b0-dd26-4067-8a50-c5336b24a63d/elt.log
# => { "job_id": "github-to-stitch", "run_id": "114439b0-dd26-4067-8a50-c5336b24a63d" }
[PARSER]
  Name   elt_path
  Format regex
  Regex  \/project\/\.meltano\/logs\/elt\/(?<job_id>[^\/]*)\/(?<run_id>[^\/]*)\/elt\.log

# Parse airflow log lines
# E.g.:
# [2022-06-27 16:27:16,975] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
# => { "time": "[TIMESTAMP]", "file": "local_task_job.py", "line": 273, "level": "INFO", "message": "0 downstream tasks scheduled from follow-on schedule check" }
[PARSER]
  Name        airflow
  Format      regex
  Regex       \[(?<time>[^\]]*)\]\s*\{(?<file>[^\:]+)\:(?<line>\d+)\}\s*(?<level>\S+)\s*-\s*(?<message>.*)
  Time_key    time
  Time_Format %Y-%m-%d %H:%M:%S,%L

# Parse airflow DAG log file path
# E.g.:
# /project/.meltano/run/airflow/logs/dag_id=meltano_daily-dbt-run-all_job-dbt-run-all/run_id=scheduled__2022-06-25T00:00:00+00:00/task_id=meltano_daily-dbt-run-all_job-dbt-run-all_task0/attempt=1.log
# => { "dag_id": "meltano_daily-dbt-run-all_job-dbt-run-all", "run_id": "scheduled__2022-06-25T00:00:00+00:00", "attempt": 1 }
[PARSER]
  Name   airflow_dag_path
  Format regex
  Regex  \/project\/\.meltano\/run\/airflow\/logs\/dag_id=(?<dag_id>[^\/]*)\/run_id=(?<run_id>[^\/]*)\/task_id=(?<task_id>[^\/]*)\/attempt=(?<attempt>\d+)\.log

# Parse airflow scheduler log file path
# E.g.:
# /project/.meltano/run/airflow/logs/scheduler/2022-06-23/airflow_db_upgrade.py.log
# => { "log_file": "airflow_db_upgrade.py" }
[PARSER]
  Name   airflow_scheduler_path
  Format regex
  Regex  \/project\/\.meltano\/run\/airflow\/logs\/scheduler\/[^\/]*\/(?<log_file>.*)\.log
